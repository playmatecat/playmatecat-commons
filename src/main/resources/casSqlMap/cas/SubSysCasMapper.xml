<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 该namespace对应接口路径,否则抛出异常:"...is not known to the MapperRegister" 
    每个select中id对应接口中的一个方法名
 -->
<mapper namespace="com.playmatecat.cas.mapper.SubSysCasMapper">
    <!-- <resultMap type="com.playmatecat.modules.login.dto.UserDTO" id="resulat">
        <result column="logined_at" property="loginedAt"/>
        <result column="email" property="email"/>
    </resultMap>
-->
    
    <select id="getUserRoles" parameterType="java.util.Map" resultType="com.playmatecat.cas.domains.dto.RoleDto">
    	<![CDATA[
    	SELECT 
    		role.id as id,
    		role.code as code
    	FROM 
    		${subSysDatabase}.role
    	INNER JOIN
    		${subSysDatabase}.rel_user2role
    	ON
    		role.id = rel_user2role.role_id
    	AND
    		rel_user2role.user_id = #{userId,jdbcType=INTEGER}
    	AND	
    		role.is_deleted = 0
    	AND
    		rel_user2role.is_deleted = 0
    	]]>
    </select>
    
    <select id="getUserPermissions" parameterType="java.util.Map" resultType="com.playmatecat.cas.domains.dto.PermissionDto">
    	<![CDATA[
    	SELECT
    		permission.id as id,
    		permission.code as code
    	FROM
    		${subSysDatabase}.role
    	INNER JOIN
    		${subSysDatabase}.rel_user2role
    	ON
    		role.id = rel_user2role.role_id
    	AND
    		rel_user2role.user_id = #{userId,jdbcType=INTEGER}
    	AND	
    		role.is_deleted = 0
    	AND
    		rel_user2role.is_deleted = 0
    		
    		
    	INNER JOIN
    		${subSysDatabase}.rel_role2permission
    	ON
    		role.id = rel_role2permission.role_id
    	AND
    		rel_role2permission.is_deleted = 0 
    		
    		  	
    	INNER JOIN
    		${subSysDatabase}.permission
    	ON
    		permission.id = rel_role2permission.permission_id
    	AND
    		permission.is_deleted = 0
    	]]>	
    </select>
    
    
    
    <select id="getRoleUriResources" parameterType="java.util.Map" resultType="com.playmatecat.cas.domains.dto.UriResourceDto">
    	<![CDATA[
    	SELECT
    		uri_resource.id as id,
    		uri_resource.uri_wildcard as uriWildcard
    	FROM
    		${subSysDatabase}.role
    	INNER JOIN
    		${subSysDatabase}.rel_user2role
    	ON
    		role.id = rel_user2role.role_id
    	AND
    		rel_user2role.user_id = #{userId,jdbcType=INTEGER}
    	AND	
    		role.is_deleted = 0
    	AND
    		rel_user2role.is_deleted = 0
    		
    		
    	INNER JOIN
    		${subSysDatabase}.rel_role2permission
    	ON
    		role.id = rel_role2permission.role_id
    	AND
    		rel_role2permission.is_deleted = 0 
    		
    		  	
    	INNER JOIN
    		${subSysDatabase}.permission
    	ON
    		permission.id = rel_role2permission.permission_id
    	AND
    		permission.is_deleted = 0
    		
    		
    	INNER JOIN
    		${subSysDatabase}.rel_permission2url_resource
    	ON
    		permission.id = rel_permission2url_resource.permission_id
    	AND
    		rel_permission2url_resource.is_deleted = 0
    		
    	
    	INNER JOIN
    		${subSysDatabase}.uri_resource
    	ON
    		rel_permission2url_resource.uri_resource_id = uri_resource.id
    	AND
    		uri_resource.is_deleted = 0
    	]]>
    </select>
    
    <select id="getLevelPermissions" parameterType="java.util.Map" resultType="com.playmatecat.cas.domains.dto.PermissionDto">
        <![CDATA[
        SELECT
            permission.id as id,
            permission.code as code
        FROM
            ${subSysDatabase}.level_dict
        INNER JOIN
            ${subSysDatabase}.rel_level_dict2permission
        ON
            level_dict.id = rel_level_dict2permission.level_dict_id
        AND
            level_dict.level = #{level,jdbcType=INTEGER}
        AND 
            level_dict.is_deleted = 0
        AND
            rel_level_dict2permission.is_deleted = 0

                
        INNER JOIN
            ${subSysDatabase}.permission
        ON
            permission.id = rel_level_dict2permission.permission_id
        AND
            permission.is_deleted = 0
        ]]> 
    </select>
    
    
    
    <select id="getLevelUriResource" parameterType="java.util.Map" resultType="com.playmatecat.cas.domains.dto.UriResourceDto">
        <![CDATA[
        SELECT
            permission.id as id,
            permission.code as code
        FROM
            ${subSysDatabase}.level_dict
        INNER JOIN
            ${subSysDatabase}.rel_level_dict2permission
        ON
            level_dict.id = rel_level_dict2permission.level_dict_id
        AND
            level_dict.level = #{level,jdbcType=INTEGER}
        AND 
            level_dict.is_deleted = 0
        AND
            rel_level_dict2permission.is_deleted = 0

                
        INNER JOIN
            ${subSysDatabase}.permission
        ON
            permission.id = rel_level_dict2permission.permission_id
        AND
            permission.is_deleted = 0
            
        
        INNER JOIN
            ${subSysDatabase}.rel_permission2url_resource
        ON
            permission.id = rel_permission2url_resource.permission_id
        AND
            rel_permission2url_resource.is_deleted = 0
            
        
        INNER JOIN
            ${subSysDatabase}.uri_resource
        ON
            rel_permission2url_resource.uri_resource_id = uri_resource.id
        AND
            uri_resource.is_deleted = 0
      
        ]]>
    </select>
    
    
    <!-- 等级变更比较随时,所以无缓存 -->
    <select id="getUserLevel" useCache="false" parameterType="java.util.Map" resultType="java.lang.Integer">
        <![CDATA[
        SELECT
            level
        FROM
            ${subSysDatabase}.user
        WHERE
            user.id = #{userId,jdbcType=INTEGER}
        AND
            user.is_deleted = 0
        ]]>
    </select>
    
    
    <insert id="addUserLevel" parameterType="java.util.Map">
        <![CDATA[
        INSERT INTO 
            ${subSysDatabase}.user 
            (id,
            level)
        VALUES 
            (#{userId,jdbcType=INTEGER},
            #{level,jdbcType=INTEGER}) 
        ON DUPLICATE KEY UPDATE 
            level = #{level,jdbcType=INTEGER}
        ]]>
    </insert>
    
</mapper>